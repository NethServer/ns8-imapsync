#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import os
import sys
import glob
import agent

def main():
    facts = {
        "tasks_total_count": 0,
        "tasks_delete_count": 0,
        "tasks_delete_older_count": 0,
        "tasks_inbox_count": 0,
        "tasks_inbox_and_delete_count": 0,
        "tasks_sync_enabled_count": 0,
        "tasks_conf_error_count": 0,
    }
    count_tasks(facts)
    json.dump(facts, fp=sys.stdout)

def count_tasks(facts):
    for env_file in glob.iglob("imapsync/*.env"):
        try:
            task_env = agent.read_envfile(env_file)
            delete_count = 1 if task_env.get("DELETE_REMOTE") else 0
            delete_older_count = 1 if 'older' in task_env.get("DELETE_REMOTE", "") else 0
            inbox_count = 1 if task_env.get("FOLDER_INBOX") else 0
            inbox_and_delete_count = 1 if delete_count == 1 and inbox_count == 1 else 0
            sync_enabled_count = 1 if task_env.get("CRON") else 0
        except Exception as ex:
            print(agent.SD_WARNING + f"get-facts: failed facts collection on task {env_file}.", ex, file=sys.stderr)
            facts["tasks_conf_error_count"] += 1
            continue
        facts["tasks_total_count"] += 1
        facts["tasks_delete_count"] += delete_count
        facts["tasks_delete_older_count"] += delete_older_count
        facts["tasks_inbox_count"] += inbox_count
        facts["tasks_inbox_and_delete_count"] += inbox_and_delete_count
        facts["tasks_sync_enabled_count"] += sync_enabled_count

if __name__ == "__main__":
    main()
