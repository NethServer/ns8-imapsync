#!/bin/ash

#
# Copyright (C) 2023 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

# control imapsync : syncctl {start,status,stop} task_id
# start : start the sync for the task_id
# status : display the state (Running, Stopped) of the sync for the task_id
# stop : stop the sync for the task_id
# validation: validate the settings by trying to just login to imapsync and quit

# shellcheck shell=dash disable=SC3010

set -e

# If stdout is not on a TTY, redirect stdout and stderr to cron's FDs
if [ ! -t 1 ]; then
    exec >/proc/1/fd/1
    exec 2>/proc/1/fd/2
fi

if [[ $# -ne 2 ]];then
    echo "Usage: syncctl {start,status,stop,validate} username"
    exit 0
fi
action=${1}
task_id=${2}

while IFS= read -r line; do
  # Trim leading/trailing whitespace
  line=$(echo "$line" | xargs)
  # Ignore empty lines
  [ -z "$line" ] && continue
  # Export the variable
  export "${line?}"
done < "/etc/imapsync/${task_id}.env"

print_log_excerpt() {
    local task_id
    task_id=$1
    awk -v taskid="${task_id}" \
    -e '/^Messages transferred/ { tx=$4 }' \
    -e '/^Exiting with return value/ { exitmsg=$0 }' \
    -e 'END { printf("task %s: tx=%s, msg=%s\n", taskid, tx, exitmsg) }' \
    "/etc/imapsync/${task_id}.log"
}

get_file_age_in_days() {
    local filename
    filename="/etc/imapsync/${task_id}.timestamp"
    prev_foldersync="$(cat ${filename} || :)"

    local maxage
    if [[ ! -f "$filename" ]] || [[ "${FOLDERSYNCHRONIZATION}" != "${prev_foldersync}" ]]; then
        maxage=""
    else
        # Get last access time in Unix timestamp
        local last_access
        last_access=$(stat -c %Y "$filename")
        # Get current Unix timestamp
        local today
        today=$(date +%s)
        # Calculate days difference and round up to next integer
        maxage=$(( (today - last_access + 86399) / 86400 ))
    fi
    echo $maxage
}

if [[ "${action}" == "start" ]]; then
    maxage="$(get_file_age_in_days)"
    if [[ "${FOLDERSYNCHRONIZATION}" == "exclusion" ]];then
        # source breaks with `|`
        exclude_regex=$(echo "${EXCLUDE}" | tr ',' '|')
    fi
    if [[ "${REMOTEHOSTNAME}" == 'imap.gmail.com' ]]; then
        gmail='--gmail1'
    fi
    if [[ -n "${FOLDER_INBOX}" ]] && [[ "${DELETE_REMOTE}" != "--delete1" ]]; then
        # Transfer only messages without the \Seen flag.
        sync_unseen=1
        maxage=
    fi
    if [[ -n "${FOLDER_INBOX}" ]] && [[ -n "${SIEVE_ENABLED}" ]]; then
        sieve_enabled=1
    fi
    # retrieve unixtimestamp
    timestamp="$(date +%s)"

    flock -x -n "/etc/imapsync/${task_id}.lock" \
        /usr/bin/imapsync --pidfile "/etc/imapsync/${task_id}.pid" --nolog \
        --noauthmd5 --noreleasecheck --allowsizemismatch \
        --skipsize --nofoldersizes "${maxage:+--maxage=${maxage}}" "${DELETE_LOCAL}" "${DELETEFOLDERS}" "${DELETE_REMOTE}" "${EXPUNGE_REMOTE}" \
        --fastio1 --fastio2 --buffersize 8192000 \
        --host1 "${REMOTEHOSTNAME}"  --user1 "${REMOTEUSERNAME}"  \
        --passfile1 "/etc/imapsync/${task_id}.pwd" --port1 "${REMOTEPORT}" "${SECURITY}"  "$gmail" \
        --host2 "${MAIL_HOST}"  --user2 "${LOCALUSER}*vmail" \
        --port2 143 --tls2 --passfile2 /etc/imapsync/vmail.pwd \
        ${FOLDER_INBOX} \
        ${sieve_enabled:+--sievedelivery2} \
        ${sync_unseen:+--search1=UNSEEN --setflag1=Seen --noresyncflags} \
        --exclude '^Public$|^Shared$'"${exclude_regex}" \
        >"/etc/imapsync/${task_id}.log" || \
    {
        exit_code=$?
        echo "task ${task_id}: imapsync error: ${exit_code}" 1>&2
        print_log_excerpt "${task_id}" 1>&2
        exit ${exit_code}
    }
    # print run summary
    print_log_excerpt "${task_id}"
    # set the timestamp file to the current time
    echo ${FOLDERSYNCHRONIZATION} > "/etc/imapsync/${task_id}.timestamp"
    touch -m -d "@${timestamp}" "/etc/imapsync/${task_id}.timestamp"
elif [[ "${action}" == "stop" ]];then
    if [[ -f "/etc/imapsync/${task_id}.pid" ]]; then
        kill  "$(cat "/etc/imapsync/${task_id}.pid")"
        # it can take a long time to imapsync to fully stop
        rm -f "/etc/imapsync/${task_id}.lock"
        # the task has been manually stopped, we cannot state that the task has been finished
        rm -f "/etc/imapsync/${task_id}.timestamp"
    else
        echo "Not Running"
    fi

elif [[ "${action}" == "status" ]];then
    if [[ -f "/etc/imapsync/${task_id}.pid" ]];then
        echo 'Running'
    else
        echo 'Stopped'
    fi
elif [[ "${action}" == "validation" ]];then
     /usr/bin/imapsync  --nolog \
        --host1 "${REMOTEHOSTNAME}"  --user1 "${REMOTEUSERNAME}"  \
        --passfile1 "/etc/imapsync/${task_id}.pwd" --port1 "${REMOTEPORT}" "${SECURITY}"  \
        --host2 "${MAIL_HOST}" --user2 "${LOCALUSER}*vmail" \
        --port2 143 --tls2 --passfile2 /etc/imapsync/vmail.pwd \
        --justlogin --timeout 10

elif [[ "${action}" == "list-informations" ]]; then

    if [[ "${FOLDERSYNCHRONIZATION}" == "exclusion" ]];then
        # source breaks with `|`
        exclude_regex=$(echo "${EXCLUDE}" | tr ',' '|')
    fi
    if [[ "${REMOTEHOSTNAME}" == 'imap.gmail.com' ]]; then
        gmail='--gmail1'
    fi
    /usr/bin/imapsync --nolog \
    "${DELETE_LOCAL}" "${DELETEFOLDERS}" "${DELETE_REMOTE}" "${EXPUNGE_REMOTE}" \
    --fastio1 --fastio2 --buffersize 8192000 \
    --host1 "${REMOTEHOSTNAME}"  --user1 "${REMOTEUSERNAME}"  \
    --passfile1 "/etc/imapsync/${task_id}.pwd" --port1 "${REMOTEPORT}" "${SECURITY}"  "$gmail" \
    --host2 "${MAIL_HOST}"  --user2 "${LOCALUSER}*vmail" \
    --port2 143 --tls2 --passfile2 /etc/imapsync/vmail.pwd \
    ${FOLDER_INBOX} --exclude '^Public$|^Shared$'"${exclude_regex}" --justfoldersizes --timeout1 10
    # FOLDER_INBOX must not be enquoted NethServer/dev#7296
fi
